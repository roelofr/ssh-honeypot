name: Build

on:
  push:
    branches:
      - master
    tags:

  pull_request:
    branches:
      - master

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_NAME: ${{ github.repository }}

permissions:
  contents: write
  attestations: write
  id-token: write

jobs:
  build-linux:
    name: Build Linux binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt install libssh-dev libjson-c-dev libpcap-dev libssl-dev

      - name: Build application
        run: make

      - name: Publish binary
        uses: actions/upload-artifact@v4
        with:
          name: ssh-honeypot
          path: bin/ssh-honeypot

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: github.ref_type == 'tag'
        with:
          subject-path: bin/ssh-honeypot

      - name: Publish with release
        if: github.ref_type == 'tag'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} bin/ssh-honeypot

  build-macos:
    name: Build MacOS binary
    runs-on: macos-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Homebrew
        uses: homebrew/actions/setup-homebrew@master

      - name: Install dependencies
        run: brew install libssh json-c

      - name: Prepare environment
        run: |
          echo "CPATH=${CPATH}:$( brew --prefix )/include" >> "$GITHUB_ENV"
          sudo ln -s $( brew --prefix libssh ) /usr/local/opt/
          sudo ln -s $( brew --prefix json-c ) /usr/local/opt/

      - name: Build application
        run: make -f MakefileOSX

      - name: Publish binary
        uses: actions/upload-artifact@v4
        with:
          name: ssh-honeypot_macos
          path: bin/ssh-honeypot
          if-no-files-found: 'error'

      - name: Rename binary
        run: mv bin/ssh-honeypot bin/ssh-honeypot-macos

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: github.ref_type == 'tag'
        with:
          subject-path: bin/ssh-honeypot-macos

      - name: Publish with release
        if: github.ref_type == 'tag'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} bin/ssh-honeypot-macos

  build-and-push-image:
    name: Build Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}
          tags: |
            type=ref,event=pr
            type=edge,branch=master
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
